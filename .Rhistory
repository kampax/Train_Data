library(tidyverse)
library(tidyverse)
df1 <- read.delim("batch results/train_data2.csv", sep = ",")
View(df1)
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("listado_imagenes.csv", sep = ",")
View(df2)
datos <- bind_cols(df2, df1)
View(datos)
library(tidyverse)
df1 <- read.delim("batch results/train_data2.csv", sep = ",")
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("listado_imagenes.csv", sep = ",")
datos <- bind_cols(df2, df1)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra del nombre de la imagen
df <- df %>%
mutate(Class_new1 = diccionario_clases[substr(url, nchar(base_url), nchar(base_url))])
library(tidyverse)
df1 <- read.delim("batch results/train_data2.csv", sep = ",")
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("listado_imagenes.csv", sep = ",")
datos <- bind_cols(df2, df1)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra del nombre de la imagen
df <- df %>%
mutate(Class_new1 = diccionario_clases[substr(url, nchar(base_url), nchar(base_url))])
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_new1 = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
library(tidyverse)
df1 <- read.delim("batch results/train_data2.csv", sep = ",")
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("listado_imagenes.csv", sep = ",")
#######
#Unir##
#######
df <- bind_cols(df2, df1)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra del nombre de la imagen
df <- df %>%
mutate(Class_new1 = diccionario_clases[substr(url, nchar(base_url), nchar(base_url))])
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_new1 = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
View(df)
library(tidyverse)
df1 <- read.delim("batch results/train_data2.csv", sep = ",")
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("listado_imagenes.csv", sep = ",")
df <- bind_cols(df2, df1)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra del nombre de la imagen
df <- df %>%
mutate(Class_new2 = diccionario_clases[substr(url, nchar(base_url), nchar(base_url))])
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_new2 = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
View(df)
library(tidyverse)
df1 <- read.delim("batch results/train_data2.csv", sep = ",")
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("batch results/train_data3.csv", sep = ",")
df2 <- df2 %>% select(Class)%>% rename(Class_new2 = Class)
df2 <- read.delim("listado_imagenes.csv", sep = ",")
df <- bind_cols(df2, df1)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra del nombre de la imagen
df <- df %>%
mutate(Class_new2 = diccionario_clases[substr(url, nchar(base_url), nchar(base_url))])
View(df)
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_new2 = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
View(df)
library(tidyverse)
df1 <- read.delim("batch results/train_data2.csv", sep = ",")
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("batch results/train_data3.csv", sep = ",")
df2 <- df2 %>% select(Class)%>% rename(Class_new2 = Class)
df2 <- read.delim("listado_imagenes.csv", sep = ",")
#######
#Unir##
#######
df <- bind_cols(df2, df1)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
View(df)
library(tidyverse)
df1 <- read.delim("batch results/train_data2.csv", sep = ",")
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("batch results/train_data3.csv", sep = ",")
df2 <- df2 %>% select(Class)%>% rename(Class_new2 = Class)
df3 <- read.delim("listado_imagenes.csv", sep = ",")
df <- bind_cols(df3, df2, df1)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
# Ver los resultados
print(df)
View(df)
View(df)
View(datos)
# # Vector de categorías
# categories <- c("Cultural_Religious", "Fauna_Flora", "Gastronomy", "Nature", "Sports", "Urban_Rural")
#
# # Extraer la categoría presente en cada fila
# datos <- datos %>%
#   mutate(Rohaifa_category = str_extract(url, paste(categories, collapse = "|")))
#
df <- df %>%
mutate(coincidencia= ifelse(Class_Original == Class_new1, "Coincide", "No coincide"))
# Count
resumen_general <- df %>%
group_by(coincidencia) %>%
summarise(total = n())
View(resumen_general)
df <- df %>%
mutate(coincidencia2= ifelse(Class_Original == Class_new2, "Coincide", "No coincide"))
View(df)
# Count
resumen_general2 <- df %>%
group_by(coincidencia2) %>%
summarise(total = n())
View(resumen_general2)
df <- df %>%
mutate(coincidencia3= ifelse(Class_new1 == Class_new2, "Coincide", "No coincide"))
# Count
resumen_general3 <- df %>%
group_by(coincidencia3) %>%
summarise(total = n())
View(resumen_general3)
df1 <- read.delim("batch results/train_data2.csv", sep = ",")
View(df1)
View(df3)
df <- bind_cols(df3, df2, df1)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
View(df)
df4 <- read.delim("listado_imagenes_check.csv.csv", sep = ",")
df1 <- read.delim("batch results/train_data2.csv", sep = ",")
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("batch results/train_data3.csv", sep = ",")
df2 <- df2 %>% select(Class)%>% rename(Class_new2 = Class)
df3 <- read.delim("listado_imagenes.csv", sep = ",")
df4 <- read.delim("listado_imagenes_check.csv", sep = ",")
df <- bind_cols(df3, df2, df1, df4)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
df3 <- read.delim("listado_imagenes.csv", sep = ",")
df4 <- read.delim("listado_imagenes_check.csv", sep = ",")
df <- read.delim("listado_imagenes.csv", sep = ",")
df4 <- read.delim("listado_imagenes_check.csv", sep = ",")
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
View(df)
View(df4)
df <- read.delim("listado_imagenes.csv", sep = ",")
df4 <- read.delim("listado_imagenes_check.csv", sep = ",")
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
View(df)
View(df4)
cheque = merge(df, df4, by = "id2", all = TRUE)
View(cheque)
library(tidyverse)
df1 <- read.delim("batch results/train_data2.csv", sep = ",")
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("batch results/train_data3.csv", sep = ",")
df2 <- df2 %>% select(Class)%>% rename(Class_new2 = Class)
df3 <- read.delim("listado_imagenes.csv", sep = ",")
df <- bind_cols(df3, df2, df1)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
# Ver los resultados
print(df)
# # Vector de categorías
# categories <- c("Cultural_Religious", "Fauna_Flora", "Gastronomy", "Nature", "Sports", "Urban_Rural")
#
# # Extraer la categoría presente en cada fila
# datos <- datos %>%
#   mutate(Rohaifa_category = str_extract(url, paste(categories, collapse = "|")))
#
df <- df %>%
mutate(coincidencia= ifelse(Class_Original == Class_new1, "Coincide", "No coincide"))
# Count
resumen_general <- df %>%
group_by(coincidencia) %>%
summarise(total = n())
View(resumen_general)
library(tidyverse)
df1 <- read.delim("batch results/train_data.csv", sep = ",")
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("batch results/train_data3.csv", sep = ",")
df2 <- df2 %>% select(Class)%>% rename(Class_new2 = Class)
df3 <- read.delim("listado_imagenes.csv", sep = ",")
df <- bind_cols(df3, df2, df1)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
# Ver los resultados
print(df)
# # Vector de categorías
# categories <- c("Cultural_Religious", "Fauna_Flora", "Gastronomy", "Nature", "Sports", "Urban_Rural")
#
# # Extraer la categoría presente en cada fila
# datos <- datos %>%
#   mutate(Rohaifa_category = str_extract(url, paste(categories, collapse = "|")))
#
df <- df %>%
mutate(coincidencia= ifelse(Class_Original == Class_new1, "Coincide", "No coincide"))
# Count
resumen_general <- df %>%
group_by(coincidencia) %>%
summarise(total = n())
df <- df %>%
mutate(coincidencia2= ifelse(Class_Original == Class_new2, "Coincide", "No coincide"))
# Count
resumen_general2 <- df %>%
group_by(coincidencia2) %>%
summarise(total = n())
df <- df %>%
mutate(coincidencia3= ifelse(Class_new1 == Class_new2, "Coincide", "No coincide"))
# Count
resumen_general3 <- df %>%
group_by(coincidencia3) %>%
summarise(total = n())
df1 <- read.delim("batch results/output_rk.csv", sep = ",")
View(resumen_general)
View(resumen_general2)
View(resumen_general3)
View(df1)
df1 <- read.delim("batch results/train_data.csv", sep = ",")
View(df1)
library(tidyverse)
df1 <- read.delim("batch results/train_data.csv", sep = ",")
df1 <- df1 %>% select(Class)%>% rename(Class_new1 = Class)
df2 <- read.delim("batch results/train_data3.csv", sep = ",")
df2 <- df2 %>% select(Class)%>% rename(Class_new2 = Class)
df3 <- read.delim("listado_imagenes.csv", sep = ",")
df <- bind_cols(df3, df2, df1)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
# Ver los resultados
print(df)
# # Vector de categorías
# categories <- c("Cultural_Religious", "Fauna_Flora", "Gastronomy", "Nature", "Sports", "Urban_Rural")
#
# # Extraer la categoría presente en cada fila
# datos <- datos %>%
#   mutate(Rohaifa_category = str_extract(url, paste(categories, collapse = "|")))
#
df <- df %>%
mutate(coincidencia= ifelse(Class_Original == Class_new1, "Coincide", "No coincide"))
# Count
resumen_general <- df %>%
group_by(coincidencia) %>%
summarise(total = n())
df <- df %>%
mutate(coincidencia2= ifelse(Class_Original == Class_new2, "Coincide", "No coincide"))
# Count
resumen_general2 <- df %>%
group_by(coincidencia2) %>%
summarise(total = n())
df <- df %>%
mutate(coincidencia3= ifelse(Class_new1 == Class_new2, "Coincide", "No coincide"))
# Count
resumen_general3 <- df %>%
group_by(coincidencia3) %>%
summarise(total = n())
df1 <- read.delim("batch results/output_rk.csv", sep = ",")
df1 <- read.delim("batch results/train_data.csv", sep = ",")
View(df1)
df2 <- read.delim("batch results/train_data3.csv", sep = ",")
View(df2)
df2 <- read.delim("batch results/train_data3.csv", sep = ",")
df2 <- df2 %>% select(Class)%>% rename(Class_new2 = Class)
df3 <- read.delim("listado_imagenes.csv", sep = ",")
df <- bind_cols(df3, df2)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
# Ver los resultados
print(df)
View(df)
library(tidyverse)
df2 <- read.delim("batch results/train_data3.csv", sep = ",")
df2 <- df2 %>% select(Class)%>% rename(Class_new = Class)
df3 <- read.delim("listado_imagenes.csv", sep = ",")
df <- bind_cols(df3, df2)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
# Ver los resultados
print(df)
# # Vector de categorías
# categories <- c("Cultural_Religious", "Fauna_Flora", "Gastronomy", "Nature", "Sports", "Urban_Rural")
#
# # Extraer la categoría presente en cada fila
# datos <- datos %>%
#   mutate(Rohaifa_category = str_extract(url, paste(categories, collapse = "|")))
#
df <- df %>%
mutate(coincidencia= ifelse(Class_Original == Class_new1, "Coincide", "No coincide"))
library(tidyverse)
df2 <- read.delim("batch results/train_data3.csv", sep = ",")
df2 <- df2 %>% select(Class)%>% rename(Class_new = Class)
df3 <- read.delim("listado_imagenes.csv", sep = ",")
#######
#Unir##
#######
df <- bind_cols(df3, df2)
# Crear un diccionario para la clasificación
diccionario_clases <- c(
"a" = "Cultural_Religious",
"b" = "Fauna_Flora",
"c" = "Gastronomy",
"d" = "Nature",
"e" = "Sports",
"f" = "Urban_Rural"
)
# Asignar la clase basada en la letra después de 'main/'
df <- df %>%
mutate(Class_Original = diccionario_clases[str_sub(url, str_locate(url, "main/")[,1] + 5, str_locate(url, "main/")[,1] + 5)])
# Ver los resultados
print(df)
#
write.csv(datos, "results.csv")
View(df)
# # Vector de categorías
# categories <- c("Cultural_Religious", "Fauna_Flora", "Gastronomy", "Nature", "Sports", "Urban_Rural")
#
# # Extraer la categoría presente en cada fila
# datos <- datos %>%
#   mutate(Rohaifa_category = str_extract(url, paste(categories, collapse = "|")))
#
df <- df %>%
mutate(coincidencia= ifelse(Class_Original == Class_new, "Coincide", "No coincide"))
# Count
resumen_general <- df %>%
group_by(coincidencia) %>%
summarise(total = n())
# Count
resumen_general3 <- df %>%
group_by(coincidencia3) %>%
summarise(total = n())
# Count
resumen_general3 <- df %>%
group_by(coincidencia) %>%
summarise(total = n())
View(resumen_general)
